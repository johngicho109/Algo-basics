Defn: An aglogrothm is a set of steps or instruction to complete a task e.g TODO, Recipe,Google map direction.

linear/sequencial/simple search - It is a search algo, defined as, Start at the beginning of the list(range of value),compare the current value to the target value, if the current value is the target value we are looking for, We are done, if it is not, we will move on sequentially to the next value in the list and repeat above step, if we reach at the end of the list, then the target value is not in the list.

Must Have for an Algo:
a)Must have a clear problem statement.Here define the input and the expected output will look like after the linear search is done doing the job.
b)An Algo defination must contain a specific set of instructions in a particular order.
c) Each step in our Algo defination must not be a complex one, it must be explicitely clear i.e steps should not be brocken down into subtask as they should be distinct.
d)An Algo should produce a result.
e)An algo must complete, and it should not take an infinite amount of time.

Correctness:An Algo is deamed correct if on every run of the Algo against all possible values of input data, we always get the output that we expect.Also for any possible input, the Algo should always terminate/end.

Efficiency:Two terms when it comes to efficiency;Time and space. Efficiency measured by time often called time complexity is the measure of how much time an Algo takes to run. Space complexity deals with the amount of memory taken by computer.

Binary Search Algo: An algo whose input is a sorted list of values, output is the position of the value in the list that we are searching for or some notation to indicate that the value does not exist in the list.Steps involved include:
1)Determine the middle position of the sorted list.
2)Compare the element in the middle position with the target element.
3)If the elements match, return the middle position and end.
4)If they dont match, check the element in the middle position whether is smaller than the target element, if it is, then we go back to step 2 with new list that goes from the middle position of the current list to the end.
5)if the element in the middle position is greater than the target element,then we go back to step 2 with a new list that start at the beginning of the the newlist to the middle of the newlist.
6)Repeat the above steps untill the target value is found or the list only contain one element.If that single element does not match with the target element, then we end the algo, indicating that the target element does not exist.

Big O:
It is a theoretical defination of the complexity of an algo as a function of the size. e.g O(n) = order of magnitude of complexity(O), A function of the size(n)
Big O sometimes is reffered to as the upperbound of the value as it measures the worst case scenerial of how the algo performs.
Linear Search Algo has a time complexity of :O(n) -
Binary Search Algo has a time complexity of :O(log n) - 
O(1) - Constant time e.g reading value in a list is a contant operation.Present in linear search
O(log n)/O(ln n) - as n grows large the number of operation grows slowly and eventually flatten out. Also called sunlinear.
O(n) - Called linear time. Any algo that reads the input sequentially will have a linear time.
O(n^2) - Quadratic runtime
O(n^3) - Cubic runtime
O(n log n) - Quasilinear runtimes.Runs between linear runtime and Quadratic runtime.It is seen in sorting algorithms(merge sort)
Polynomial runtimes:O(n^k), k= 0,1,2,3...
Exponential runtimes:O(x^n) - Includes Brute force
Factorial/Combinatorial runtime(Travelling salesman problem):O(n!), where
n! = n(n-1)(n-2)...2(1)























